{"version":3,"file":"component---src-pages-index-js-91687ff4c5941b1d691f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Client.js","webpack://gatsby-starter-default/./src/components/Feature.js","webpack://gatsby-starter-default/./src/components/FeatureList.js","webpack://gatsby-starter-default/./src/components/Hero.js","webpack://gatsby-starter-default/./src/components/Navbar.js","webpack://gatsby-starter-default/./src/components/PricingItem.js","webpack://gatsby-starter-default/./src/components/PricingList.js","webpack://gatsby-starter-default/./src/components/Extra.js","webpack://gatsby-starter-default/./src/components/ExtraList.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\n\nconst Client = () => {\n  const data = useStaticQuery(graphql`\n    query ClientList {\n      allDataJson {\n        nodes {\n          clients {\n            pic {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  formats: [AUTO, WEBP, AVIF]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n\n\n\n  const clientData = data.allDataJson.nodes[0].clients\n\n  return (\n    <div className=\"flex justify-between\">\n      {clientData.map((item, index) => {\n        const image = getImage(item.pic)\n        return (\n          <GatsbyImage\n            key={index}\n            className=\"\"\n            image={image}\n            alt={''}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Client\n","import { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\n\nconst Features = ({ item, className }) => {\n  const { title, description, pic, reverse } = item\n\n  const image = getImage(pic)\n\n  return (\n    <div className={`${reverse ? \"flex flex-row-reverse\" : \"flex\"}`}>\n      <div>\n        <img src={image} alt=\"\" />\n        <GatsbyImage className=\"lg:w-full object-contain\" image={image} alt={title}/>\n      </div>\n\n      <div>\n        <h1>{title}</h1>\n        <p>{description}</p>\n        <a href=\"\">Learn more</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Features\n","import React from \"react\"\nimport Feature from \"./Feature\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst FeatureList = () => {\n  const data = useStaticQuery(graphql`\n    query FeatureList {\n      allDataJson {\n        nodes {\n          features {\n            title\n            description\n            reverse\n            pic {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  formats: [AUTO, WEBP, AVIF]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n      {data.allDataJson.nodes[0].features.map(item => {\n        return <Feature key={item.title} item={item} />\n      })}\n    </div>\n  )\n}\n\nexport default FeatureList\n","import React from \"react\"\nimport {StaticImage} from 'gatsby-plugin-image'\n\nconst Hero = () => {\n  return (\n    <div className=\"mt-18 pt-16 flex\">\n      <div className=\"flex flex-col\">\n        <h1>Grow your subscription business</h1>\n        <p>\n          Outcome-centered products that reduce churn, optimize pricing, and\n          grow your subscription business end-to-end.\n        </p>\n        <button>Get Started</button>\n      </div>\n      <div>\n        <StaticImage\n          src=\"../images/hero-img.png\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          alt=\"A Gatsby astronaut\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Hero\n","import React, { useEffect, useState } from \"react\"\nimport {StaticImage} from 'gatsby-plugin-image'\n\nconst Navbar = ({ setIsOpen }) => {\n  const isBrowser = () => typeof window !== \"undefined\"\n\n  const detectScroll = () => {\n    if (isBrowser) return window.pageYOffset\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll)\n  }, [detectScroll])\n\n  const [isScrolled, setIsScrolled] = useState(false)\n\n  const handleScroll = () => {\n    if (window.pageYOffset > 0) {\n      if (!isScrolled) {\n        setIsScrolled(true)\n      }\n    } else {\n      if (isScrolled) {\n        setIsScrolled(false)\n      }\n    }\n  }\n\n  return (\n    <nav\n      className={`fixed z-10 ${\n        isScrolled ? \"border-b-2\" : \"border-none\"\n      } w-full top-0 bg-white`}\n    >\n      <div className=\"flex justify-between items-center px-6 py-4 lg:w-4/5 lg:mx-auto\">\n        <div>\n          <a href=\"/\">\n            <span className=\"text-sm text-theme font-bold\">\n              <StaticImage\n                src=\"../images/logo.svg\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n                alt=\"A Gatsby astronaut\"\n              />\n            </span>\n          </a>\n        </div>\n\n        <ul className=\"hidden lg:flex gap-x-12\">\n          <li className=\"text-xl\" onClick={() => setIsOpen(false)}>\n            <a href=\"#portfolio\">Portfolio</a>\n          </li>\n          <li className=\"text-xl\" onClick={() => setIsOpen(false)}>\n            <a href=\"#about\">About</a>\n          </li>\n          <li className=\"text-xl\" onClick={() => setIsOpen(false)}>\n            <a href=\"#contact\">Contact</a>\n          </li>\n        </ul>\n\n        <div className=\"lg:hidden\" onClick={() => setIsOpen(true)}>\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M3 7C3 6.44772 3.44772 6 4 6H20C20.5523 6 21 6.44772 21 7C21 7.55228 20.5523 8 20 8H4C3.44772 8 3 7.55228 3 7ZM3 12C3 11.4477 3.44772 11 4 11L20 11C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13L4 13C3.44772 13 3 12.5523 3 12ZM4 16C3.44772 16 3 16.4477 3 17C3 17.5523 3.44772 18 4 18H20C20.5523 18 21 17.5523 21 17C21 16.4477 20.5523 16 20 16H4Z\"\n              fill=\"#6070FF\"\n            />\n          </svg>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from \"react\";\n\nconst PricingItem = ({item,index}) => {\n\n  const {plan,price,features} = item\n\n  return (\n    <div className={`${index === 1? 'bg-orange-500' :'bg-gray-300'} w-full`}>\n      <h6>{plan}</h6>\n      <span>{price}</span>\n      <ul>\n        {features.map((item,index) => {\n         return <li key={index}>{item}</li>\n        })}\n        </ul>\n    </div>\n  )\n}\n\nexport default PricingItem\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React, { useState } from \"react\";\nimport PricingItem from './PricingItem';\n\n\nconst PricingList = () => {\n\nconst data = useStaticQuery(graphql`\n  query PricingList {\n    allDataJson {\n      nodes {\n        pricing {\n          yearly {\n            plan\n            price\n            features\n          }\n          monthly {\n            plan\n            price\n            features\n          }\n        }\n      }\n    }\n  }\n`)\n\n  const shortData = data.allDataJson.nodes[0]\n\n  const [isYearly,setIsYearly] = useState(true)\n\n  const activePlan = isYearly ? shortData.pricing[0].yearly : shortData.pricing[0].monthly;\n\n\n\n  return (\n    <div className='flex'>\n      {activePlan.map((item,index) => {\n       return <PricingItem key={index} item={item} index={index}/>\n      })}\n    </div>\n  )\n}\n\nexport default PricingList\n","import { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\n\nconst Extra = ({ item }) => {\n  const { pic, title, description } = item\n  const image = getImage(pic)\n\n  return (\n    <div>\n      <GatsbyImage\n        className=\"lg:w-full object-contain\"\n        image={image}\n        alt={title}\n      />\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  )\n}\n\nexport default Extra\n","import React from \"react\"\nimport Extra from \"./Extra\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst ExtraList = () => {\n  const data = useStaticQuery(graphql`\n    query ExtraList {\n      allDataJson {\n        nodes {\n          extras {\n            title\n            description\n            pic {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  formats: [AUTO, WEBP, AVIF]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className=\"flex justify-between\">\n      {data.allDataJson.nodes[0].extras.map(item => {\n        return <Extra key={item.title} item={item} />\n      })}\n    </div>\n  )\n}\n\nexport default ExtraList\n","import * as React from \"react\"\nimport Client from \"../components/Client\"\nimport FeatureList from \"../components/FeatureList\"\nimport Hero from \"../components/Hero\"\nimport Layout from \"../components/layout\"\nimport Navbar from \"../components/Navbar\"\nimport PricingList from \"../components/PricingList\"\nimport Seo from \"../components/seo\"\nimport ExtraList from '../components/ExtraList'\n\nconst IndexPage = () => (\n  <Layout>\n    <Seo title=\"Home\" />\n    <Navbar />\n    <Hero />\n    <Client />\n\n    <FeatureList />\n\n    <ExtraList />\n\n    <PricingList />\n  </Layout>\n)\n\nexport default IndexPage\n"],"names":["clientData","useStaticQuery","allDataJson","nodes","clients","className","map","item","index","image","getImage","pic","G","key","alt","title","description","reverse","src","href","data","features","Feature","S","formats","setIsOpen","isBrowser","window","useEffect","addEventListener","handleScroll","pageYOffset","useState","isScrolled","setIsScrolled","onClick","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","plan","price","shortData","isYearly","activePlan","pricing","yearly","monthly","extras"],"sourceRoot":""}